# Задача 34:  Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм.
# Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает,
# Вам стоит написать программу. Винни-Пух считает, что ритм есть,
# если число слогов (т.е. число гласных букв) в каждой фразе стихотворения одинаковое.
# Фраза может состоять из одного слова, если во фразе несколько слов, то они разделяются дефисами.
# Фразы отделяются друг от друга пробелами. Стихотворение  Винни-Пух вбивает в программу с клавиатуры.
# В ответе напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не в порядке

# def same_by(characteristic, objects):

#     el = len(list(filter(characteristic,objects)))
#     print(el)
#     return not el or el == len(objects)
# values = [0, 2, 10, 6]
# values2 = [1, 3, 5, 7, 10]
# if same_by(lambda x: x % 2, values2):
#     print('same')
# else:
#     print('different')

# val1 = "Если-я-чешу-в-затылке Не-беда! В-голове-моей-опилки, Да-да-да. Но-хотя-там-и-опилки, Но-Шумелки-и-Вопилки (А-также-Кричалки, Пыхтелки-и-даже Сопелки-и-так-далее) Сочиняю-я-неплохо И-ног-да!"
# val2 = "Куда-идем-мы-с-Пятачком? Большой-большой-секрет, И-не-расскажем-мы-о-нем, Да-да!-(Верней,-нет-нет!) Зачем-шагаем-мы-вдвоем, Откуда-и-куда? Секретов-мы-не-выдаем! Нет-нет!-(Верней,-да-да!)"
# val3 = "Я-Тучка,-Тучка,-Тучка, А-вовсе-не-медведь. Ах,-как-приятно-Тучке По-небу-лететь! Ах,-в-синем-синем-небе Порядок-и-уют– Поэтому-все-Тучки Так-весело-поют!"

# val4 = "а а а а а а а"

# glass = ["а", "у", "о", "ы", "и", "э", "я", "ю", "ё", "е"]

# def find_glass_num(func, val1, glass):
#     nums = []
#     list1 = val1.split(" ")
#     for i in list1:
#         nums.append(func(i, glass))
#     return nums

# def func(k, glass):
#     num = 0
#     j = list(k)
#     for i in j:
#         if i in glass:
#             num += 1
#     return num

# def find_rhyme(num_glass):
#     if [num_glass[0]] * len(num_glass) == num_glass:
#         return "Парам пам-пам"
#     else:
#         return "Пам парам"

# print(find_rhyme(find_glass_num(func, val4, glass)))


# Задача 36: Напишите функцию вывода таблицы умножения print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны. 
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля). Примечание: бинарной операцией называется любая операция, 
# у которой ровно два аргумента, как, например, у операции умножения.

# *Пример:*

# **Ввод:** `print_operation_table(lambda x, y: x * y) `
# **Вывод:**
# 1 2 3 4 5 6

# 2 4 6 8 10 12
# 3 6 9 12 15 18
# 4 8 12 16 20 24
# 5 10 15 20 25 30
# 6 12 18 24 30 36

# def print_operation_table(operation, num_rows=6, num_columns=6):
#     for i in range(1, num_rows+1):
#         for j in range(1, num_columns+1):
#             print(operation(i, j), end='\t')
#         print()

# def multiplication(a, b):
#     return a * b

# a = int(input("введите кол-во строк: " ))
# b = int(input("введите кол-во колонок: " ))

# print_operation_table(multiplication, a, b)
